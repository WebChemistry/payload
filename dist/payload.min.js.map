{"version":3,"file":"payload.min.js","sources":["../assets/payload.js"],"sourcesContent":["class PayloadResponse {\n\n\t/** @param {Number} */\n\t#code;\n\n\t/** @param {Array} */\n\t#meta;\n\n\t/** @param {Array} */\n\t#data;\n\n\t/** @param {Array} */\n\t#errors;\n\n\t#clientErrorProcessors;\n\n\t/** @var {PayloadExtension[]} */\n\t#extensions;\n\n\t/**\n\t * @param {PayloadExtension[]} extensions\n\t */\n\tconstructor(response, clientErrorProcessors, extensions) {\n\t\tthis.#clientErrorProcessors = clientErrorProcessors;\n\t\tthis.#extensions = extensions;\n\n\t\tif (typeof response !== 'object' || response === null) {\n\t\t\tthrow new Error('Response must be an object.');\n\t\t}\n\n\t\tif (typeof response.code !== 'number') {\n\t\t\tthrow new Error('Response code must be an number.');\n\t\t}\n\n\t\tthis.#code = response.code;\n\n\t\tif (!Array.isArray(response.meta)) {\n\t\t\tthrow new Error('Response meta must be an array.');\n\t\t}\n\n\t\tthis.#meta = response.meta;\n\n\t\tif (!Array.isArray(response.data)) {\n\t\t\tthrow new Error('Response data must be an array.');\n\t\t}\n\n\t\tthis.#data = response.data;\n\n\t\tif (!Array.isArray(response.errors)) {\n\t\t\tthrow new Error('Response errors must be an array.');\n\t\t}\n\n\t\tthis.#errors = response.errors.map(error => {\n\t\t\tif (typeof error.message !== 'string') {\n\t\t\t\tthrow new Error('Response error message must be a string.');\n\t\t\t}\n\n\t\t\tif (typeof error.type !== 'string') {\n\t\t\t\tthrow new Error('Response error type must be a string.');\n\t\t\t}\n\n\t\t\treturn error;\n\t\t});\n\n\t\tthis.#extensions.forEach(extension => extension.before(this));\n\n\t\tthis.#process();\n\n\t\tthis.#extensions.forEach(extension => extension.after(this));\n\t}\n\n\t#process() {\n\t\tthis.getCriticalErrors().forEach(error => {\n\t\t\tconsole.error(error.message)\n\t\t});\n\n\t\tthis.#clientErrorProcessors.forEach(processor => {\n\t\t\tthis.getClientErrors().forEach(error => {\n\t\t\t\tprocessor(error);\n\t\t\t})\n\t\t});\n\t}\n\n\tisSuccess() {\n\t\treturn this.#code >= 200 && this.#code < 300;\n\t}\n\n\tisError() {\n\t\treturn !this.isSuccess();\n\t}\n\n\thasErrors() {\n\t\treturn this.#errors.length !== 0;\n\t}\n\n\thasMeta(key) {\n\t\treturn typeof this.#meta[key] !== 'undefined';\n\t}\n\n\tgetMeta(key) {\n\t\treturn this.#meta[key];\n\t}\n\n\tgetData() {\n\t\treturn this.#data;\n\t}\n\n\tgetCode() {\n\t\treturn this.#code;\n\t}\n\n\tgetClientErrors() {\n\t\treturn this.#errors.filter(error => error.type === 'client');\n\t}\n\n\tgetErrors() {\n\t\treturn this.#errors;\n\t}\n\n\t/**\n\t * @returns {Array}\n\t */\n\tgetCriticalErrors() {\n\t\treturn this.#errors.filter(error => error.type === 'critical');\n\t}\n\n}\n\nclass PayloadExtension {\n\n\t/**\n\t * @param {PayloadResponse} payload\n\t */\n\tbefore(payload) {\n\n\t}\n\n\t/**\n\t * @param {PayloadResponse} payload\n\t */\n\tafter(payload) {\n\n\t}\n\n}\n\nexport default class PayloadResponseFactory {\n\n\t#clientErrorProcessors = [];\n\n\t/** @var {PayloadExtension[]} */\n\t#extensions = [];\n\n\t/**\n\t * @param {PayloadExtension} extension\n\t */\n\taddExtension(extension) {\n\t\tthis.#extensions.push(extension);\n\t}\n\n\taddClientErrorProcessor(processor) {\n\t\tthis.#clientErrorProcessors.push(processor);\n\t}\n\n\t/**\n\t * @param {Promise<Response>} fetch\n\t * @return {Promise<PayloadResponse>}\n\t */\n\tasync createFetch(fetch) {\n\t\treturn new PayloadResponse(\n\t\t\tawait (await fetch).json(),\n\t\t\tthis.#clientErrorProcessors,\n\t\t\tthis.#extensions,\n\t\t);\n\t}\n\n}\n"],"names":["PayloadResponse","code","meta","data","errors","clientErrorProcessors","extensions","constructor","response","this","Error","Array","isArray","map","error","message","type","forEach","extension","before","process","after","getCriticalErrors","console","processor","getClientErrors","isSuccess","isError","hasErrors","length","hasMeta","key","getMeta","getData","getCode","filter","getErrors","addExtension","push","addClientErrorProcessor","async","fetch","json"],"mappings":"gPAAA,MAAMA,EAGLC,GAGAC,GAGAC,GAGAC,GAEAC,GAGAC,GAKAC,YAAYC,EAAUH,EAAuBC,GAI5C,GAHAG,MAAKJ,EAAyBA,EAC9BI,MAAKH,EAAcA,EAEK,iBAAbE,GAAsC,OAAbA,EACnC,MAAM,IAAIE,MAAM,+BAGjB,GAA6B,iBAAlBF,EAASP,KACnB,MAAM,IAAIS,MAAM,oCAKjB,GAFAD,MAAKR,EAAQO,EAASP,MAEjBU,MAAMC,QAAQJ,EAASN,MAC3B,MAAM,IAAIQ,MAAM,mCAKjB,GAFAD,MAAKP,EAAQM,EAASN,MAEjBS,MAAMC,QAAQJ,EAASL,MAC3B,MAAM,IAAIO,MAAM,mCAKjB,GAFAD,MAAKN,EAAQK,EAASL,MAEjBQ,MAAMC,QAAQJ,EAASJ,QAC3B,MAAM,IAAIM,MAAM,qCAGjBD,MAAKL,EAAUI,EAASJ,OAAOS,KAAIC,IAClC,GAA6B,iBAAlBA,EAAMC,QAChB,MAAM,IAAIL,MAAM,4CAGjB,GAA0B,iBAAfI,EAAME,KAChB,MAAM,IAAIN,MAAM,yCAGjB,OAAOI,KAGRL,MAAKH,EAAYW,SAAQC,GAAaA,EAAUC,OAAOV,QAEvDA,MAAKW,IAELX,MAAKH,EAAYW,SAAQC,GAAaA,EAAUG,MAAMZ,QAGvDW,KACCX,KAAKa,oBAAoBL,SAAQH,IAChCS,QAAQT,MAAMA,EAAMC,YAGrBN,MAAKJ,EAAuBY,SAAQO,IACnCf,KAAKgB,kBAAkBR,SAAQH,IAC9BU,EAAUV,SAKbY,YACC,OAAOjB,MAAKR,GAAS,KAAOQ,MAAKR,EAAQ,IAG1C0B,UACC,OAAQlB,KAAKiB,YAGdE,YACC,OAA+B,IAAxBnB,MAAKL,EAAQyB,OAGrBC,QAAQC,GACP,YAAkC,IAApBtB,MAAKP,EAAM6B,GAG1BC,QAAQD,GACP,OAAOtB,MAAKP,EAAM6B,GAGnBE,UACC,OAAOxB,MAAKN,EAGb+B,UACC,OAAOzB,MAAKR,EAGbwB,kBACC,OAAOhB,MAAKL,EAAQ+B,QAAOrB,GAAwB,WAAfA,EAAME,OAG3CoB,YACC,OAAO3B,MAAKL,EAMbkB,oBACC,OAAOb,MAAKL,EAAQ+B,QAAOrB,GAAwB,aAAfA,EAAME,eAuB7B,MAEdX,GAAyB,GAGzBC,GAAc,GAKd+B,aAAanB,GACZT,MAAKH,EAAYgC,KAAKpB,GAGvBqB,wBAAwBf,GACvBf,MAAKJ,EAAuBiC,KAAKd,GAOlCgB,kBAAkBC,GACjB,OAAO,IAAIzC,cACGyC,GAAOC,OACpBjC,MAAKJ,EACLI,MAAKH"}